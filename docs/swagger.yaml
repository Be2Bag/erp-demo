basePath: /service/api
definitions:
  dto.Address:
    properties:
      address_line1:
        description: ที่อยู่บรรทัด 1
        type: string
      address_line2:
        description: ที่อยู่บรรทัด 2
        type: string
      country:
        description: ประเทศ
        type: string
      district:
        description: อำเภอ
        type: string
      postal_code:
        description: รหัสไปรษณีย์
        type: string
      province:
        description: จังหวัด
        type: string
      subdistrict:
        description: ตำบล
        type: string
    type: object
  dto.BankInfo:
    properties:
      account_name:
        description: ชื่อบัญชี
        type: string
      account_no:
        description: เลขที่บัญชี
        type: string
      bank_name:
        description: ชื่อธนาคาร
        type: string
    type: object
  dto.BaseError400ResponseSwagger:
    properties:
      data: {}
      message_en:
        example: Invalid request
        type: string
      message_th:
        example: ข้อมูลไม่ถูกต้อง กรุณาตรวจสอบ
        type: string
      status:
        example: error
        type: string
      status_code:
        example: 400
        type: integer
    type: object
  dto.BaseError401ResponseSwagger:
    properties:
      data: {}
      message_en:
        example: Unauthorized
        type: string
      message_th:
        example: การเข้าถึงถูกปฏิเสธ
        type: string
      status:
        example: error
        type: string
      status_code:
        example: 401
        type: integer
    type: object
  dto.BaseError500ResponseSwagger:
    properties:
      data: {}
      message_en:
        example: Internal server error
        type: string
      message_th:
        example: เกิดข้อผิดพลาดในระบบ
        type: string
      status:
        example: error
        type: string
      status_code:
        example: 500
        type: integer
    type: object
  dto.BaseResponse:
    properties:
      data: {}
      message_en:
        example: Success
        type: string
      message_th:
        example: สำเร็จ
        type: string
      status:
        example: success
        type: string
      status_code:
        example: 200
        type: integer
    type: object
  dto.BaseSuccess201ResponseSwagger:
    properties:
      data: {}
      message_en:
        example: User created successfully
        type: string
      message_th:
        example: สร้างผู้ใช้สำเร็จ
        type: string
      status:
        example: success
        type: string
      status_code:
        example: 201
        type: integer
    type: object
  dto.BaseSuccessPaginationResponseSwagger:
    properties:
      data:
        $ref: '#/definitions/dto.Pagination'
      message_en:
        example: Success
        type: string
      message_th:
        example: สำเร็จ
        type: string
      status:
        example: success
        type: string
      status_code:
        example: 200
        type: integer
    type: object
  dto.Document:
    properties:
      created_at:
        description: วันที่สร้างเอกสาร
        type: string
      deleted_at:
        description: วันที่ลบเอกสาร (soft delete)
        type: string
      file_url:
        description: ลิงก์ไฟล์เอกสาร
        type: string
      name:
        description: ชื่อเอกสาร
        type: string
      type:
        description: ประเภทเอกสาร เช่น "id_card", "degree"
        type: string
      uploaded_at:
        description: วันที่อัปโหลดเอกสาร
        type: string
    type: object
  dto.EmploymentHistory:
    properties:
      created_at:
        type: string
      deleted_at:
        description: soft delete
        type: string
      department_id:
        description: แผนกในช่วงเวลานั้น
        type: string
      employment_type:
        description: ประเภทการจ้าง (เช่น full-time, intern)
        type: string
      from_date:
        description: วันที่เริ่มต้น
        type: string
      note:
        description: หมายเหตุ (ถ้ามี)
        type: string
      position_id:
        description: ตำแหน่งในช่วงเวลานั้น
        type: string
      to_date:
        description: วันที่สิ้นสุด (nullable ถ้ายังทำอยู่)
        type: string
      updated_at:
        type: string
      user_id:
        description: รหัสผู้ใช้ที่เกี่ยวข้อง
        type: string
    type: object
  dto.KPITemplateDTO:
    properties:
      department:
        description: แผนก
        type: string
      items:
        description: รายการ KPI
        items:
          $ref: '#/definitions/dto.KPITemplateItemDTO'
        type: array
      name:
        description: ชื่อ Template
        type: string
      total_weight:
        description: น้ำหนักรวม (ต้อง = 100)
        type: integer
      version:
        description: เวอร์ชันของ Template
        type: integer
    type: object
  dto.KPITemplateItemDTO:
    properties:
      category:
        description: หมวดหมู่
        type: string
      description:
        description: คำอธิบาย
        type: string
      max_score:
        description: คะแนนเต็ม
        type: integer
      name:
        description: ชื่อ KPI
        type: string
      weight:
        description: น้ำหนัก %
        type: integer
    type: object
  dto.Pagination:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.ResponseGetUserAll'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total_count:
        example: 100
        type: integer
      total_pages:
        example: 10
        type: integer
    type: object
  dto.RequestConfirmResetPassword:
    properties:
      new_password:
        type: string
      token:
        type: string
    required:
    - new_password
    - token
    type: object
  dto.RequestDeleteFile:
    properties:
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  dto.RequestDownloadFile:
    properties:
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  dto.RequestLogin:
    properties:
      email:
        description: อีเมลของผู้ใช้
        type: string
      password:
        description: รหัสผ่าน
        type: string
    type: object
  dto.RequestResetPassword:
    properties:
      email:
        description: อีเมลของผู้ใช้
        example: example@mail.com
        type: string
      redirect_url:
        description: URL ที่จะเปลี่ยนเส้นทางหลังจากรีเซ็ตรหัสผ่าน
        example: https://erp-demo-frontend.onrender.com
        type: string
    type: object
  dto.RequestUpdateUser:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/dto.Address'
        description: ที่อยู่ของพนักงาน
      bank_info:
        allOf:
        - $ref: '#/definitions/dto.BankInfo'
        description: ข้อมูลบัญชีธนาคารของพนักงาน
      birth_date:
        description: วันเดือนปีเกิดของพนักงาน (รูปแบบ string)
        type: string
      department_id:
        description: รหัสแผนก (FK ไปยัง Departments)
        type: string
      documents:
        description: รายการเอกสารที่เกี่ยวข้องกับพนักงาน
        items:
          $ref: '#/definitions/dto.Document'
        type: array
      email:
        description: อีเมลของผู้ใช้
        type: string
      employee_code:
        description: รหัสพนักงาน (อาจใช้สำหรับอ้างอิงภายใน)
        type: string
      employment_history:
        description: ประวัติการจ้างงาน (อาจมีหลายรายการ)
        items:
          $ref: '#/definitions/dto.EmploymentHistory'
        type: array
      employment_type:
        description: ประเภทการจ้างงาน (เช่น full-time, part-time)
        type: string
      first_name_en:
        description: ชื่อจริงของพนักงาน (ภาษาอังกฤษ)
        type: string
      first_name_th:
        description: ชื่อจริงของพนักงาน
        type: string
      gender:
        description: เพศของพนักงาน
        type: string
      hire_date:
        description: วันที่เริ่มงาน
        type: string
      id_card:
        description: หมายเลขบัตรประชาชน (อาจเข้ารหัสก่อนจัดเก็บ)
        type: string
      last_name_en:
        description: นามสกุลของพนักงาน (ภาษาอังกฤษ)
        type: string
      last_name_th:
        description: นามสกุลของพนักงาน
        type: string
      phone:
        description: เบอร์โทรศัพท์ของพนักงาน
        type: string
      position_id:
        description: รหัสตำแหน่งงาน (FK ไปยัง Positions)
        type: string
      title_en:
        description: คำนำหน้าชื่อ (ภาษาอังกฤษ)
        type: string
      title_th:
        description: คำนำหน้าชื่อ (ภาษาไทย)
        type: string
    type: object
  dto.RequestUpdateUserStatus:
    properties:
      status:
        enum:
        - pending
        - approved
        - rejected
        - cancelled
        example: approved
        type: string
      user_id:
        example: 50f7a957-8c2c-4a76-88ed-7c247471f28f
        type: string
    required:
    - status
    - user_id
    type: object
  dto.ResponseGetDepartments:
    properties:
      department_id:
        description: รหัสแผนก (ไม่ซ้ำกัน)
        type: string
      department_name:
        description: ชื่อแผนก
        type: string
    type: object
  dto.ResponseGetDistricts:
    properties:
      district_id:
        description: รหัสอำเภอ (
        type: string
      district_name:
        description: ชื่ออำเภอ
        type: string
    type: object
  dto.ResponseGetPositions:
    properties:
      position_id:
        description: รหัสตำแหน่งงาน (ไม่ซ้ำกัน)
        type: string
      position_name:
        description: ชื่อตำแหน่งงาน
        type: string
    type: object
  dto.ResponseGetProvinces:
    properties:
      province_id:
        description: รหัสจังหวัด (ไม่ซ้ำกัน)
        type: string
      province_name:
        description: ชื่อจังหวัด
        type: string
    type: object
  dto.ResponseGetSubDistricts:
    properties:
      sub_district_id:
        description: รหัสตำบล (ไม่ซ้ำกัน)
        type: string
      sub_district_name:
        description: ชื่อตำบล
        type: string
      zip_code:
        description: รหัสไปรษณีย์
        type: string
    type: object
  dto.ResponseGetUserAll:
    properties:
      avatar:
        description: ลิงก์หรือที่อยู่รูปประจำตัวผู้ใช้
        example: https://example.com/avatar.jpg
        type: string
      created_at:
        description: วันที่สร้างข้อมูลนี้
        example: "2025-07-11T08:25:08.526Z"
        type: string
      deleted_at:
        description: วันที่ลบข้อมูล (soft delete)
        example: "null"
        type: string
      department:
        description: รหัสแผนก (FK ไปยัง Departments)
        example: DEP001
        type: string
      email:
        description: อีเมลของผู้ใช้
        example: จันทรสกุล
        type: string
      first_name_en:
        description: ชื่อจริงของพนักงาน (ภาษาอังกฤษ)
        example: Kittiya
        type: string
      first_name_th:
        description: ชื่อจริงของพนักงาน
        example: กิตติยา
        type: string
      kpi_score:
        description: คะแนน KPI ของพนักงาน
        example: "85"
        type: string
      last_name_en:
        description: นามสกุลของพนักงาน (ภาษาอังกฤษ)
        example: Chanthasakul
        type: string
      last_name_th:
        description: นามสกุลของพนักงาน
        example: จันทรสกุล
        type: string
      phone:
        description: เบอร์โทรศัพท์ของพนักงาน
        example: 094-222-7788
        type: string
      position:
        description: รหัสตำแหน่งงาน (FK ไปยัง Positions)
        example: POS126
        type: string
      status:
        description: สถานะของผู้ใช้ (เช่น approved , pending, rejected)
        example: approved
        type: string
      tasks_completed:
        description: จำนวนงานที่เสร็จสมบูรณ์
        example: "8"
        type: string
      tasks_total:
        description: จำนวนงานทั้งหมดที่ได้รับมอบหมาย
        example: "10"
        type: string
      title_en:
        description: คำนำหน้าชื่อ (ภาษาอังกฤษ)
        example: Miss
        type: string
      title_th:
        description: คำนำหน้าชื่อ (ภาษาไทย)
        example: นางสาว
        type: string
      updated_at:
        description: วันที่แก้ไขข้อมูลล่าสุด
        example: "2025-07-11T08:25:08.526Z"
        type: string
      user_id:
        description: รหัสประจำตัวผู้ใช้ (ไม่ซ้ำกัน)
        example: 1d5855c2-7d14-4f8d-8b5d-ef20cb5cb3cf
        type: string
    type: object
host: api.rkp-media.com
info:
  contact: {}
  description: This is an ERP API demo.
  title: ERP Demo API
  version: "1.0"
paths:
  /v1/admin/update-status-user:
    put:
      consumes:
      - application/json
      description: สำหรับจัดการอนุมัติผู้ใช้ pending approved rejected
      parameters:
      - description: Request Update User Status
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RequestUpdateUserStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Update User Status
      tags:
      - Admin
  /v1/auth/confirm-reset:
    post:
      consumes:
      - application/json
      description: ใช้สำหรับยืนยันการรีเซ็ตรหัสผ่านของผู้ใช้ token จะหมดอายุภายใน
        15 นาที
      parameters:
      - description: Confirm reset password payload
        in: body
        name: confirm
        required: true
        schema:
          $ref: '#/definitions/dto.RequestConfirmResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseError400ResponseSwagger'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseError401ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: Confirm reset password
      tags:
      - auth
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: ใช้สำหรับเข้าสู่ระบบผู้ใช้
      parameters:
      - description: User login payload
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseError400ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: User login
      tags:
      - auth
  /v1/auth/logout:
    post:
      consumes:
      - application/json
      description: ใช้สำหรับออกจากระบบผู้ใช้
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: User logout
      tags:
      - auth
  /v1/auth/reset:
    post:
      consumes:
      - application/json
      description: ใช้สำหรับรีเซ็ตรหัสผ่านของผู้ใช้
      parameters:
      - description: Reset password payload
        in: body
        name: reset
        required: true
        schema:
          $ref: '#/definitions/dto.RequestResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseError400ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: Reset user password
      tags:
      - auth
  /v1/auth/sessions:
    get:
      consumes:
      - application/json
      description: ใช้สำหรับดึงข้อมูลคุกกี้ auth token ของผู้ใช้
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseError401ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: Get user sessions
      tags:
      - auth
  /v1/dropdown/department:
    get:
      consumes:
      - application/json
      description: ใช้สำหรับดึงข้อมูลแผนกทั้งหมด
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ResponseGetDepartments'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Get all departments
      tags:
      - dropdown
  /v1/dropdown/district/{id}:
    get:
      consumes:
      - application/json
      description: ใช้สำหรับดึงข้อมูลอำเภอทั้งหมดตามรหัสจังหวัด
      parameters:
      - description: Province ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ResponseGetDistricts'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Get all districts by province ID
      tags:
      - dropdown
  /v1/dropdown/position:
    get:
      consumes:
      - application/json
      description: ใช้สำหรับดึงข้อมูลตำแหน่งงานทั้งหมด
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ResponseGetPositions'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Get all positions
      tags:
      - dropdown
  /v1/dropdown/province:
    get:
      consumes:
      - application/json
      description: ใช้สำหรับดึงข้อมูลจังหวัดทั้งหมด
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ResponseGetProvinces'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Get all provinces
      tags:
      - dropdown
  /v1/dropdown/subdistrict/{id}:
    get:
      consumes:
      - application/json
      description: ใช้สำหรับดึงข้อมูลตำบลทั้งหมดตามรหัสอำเภอ
      parameters:
      - description: District ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ResponseGetSubDistricts'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Get all sub-districts by district ID
      tags:
      - dropdown
  /v1/kpi/templates:
    post:
      consumes:
      - application/json
      description: Create a new KPI Template
      parameters:
      - description: KPI Template
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/dto.KPITemplateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Create a new KPI Template
      tags:
      - KPI
  /v1/kpi/templates/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a KPI Template
      parameters:
      - description: KPI Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Delete a KPI Template
      tags:
      - KPI
    get:
      consumes:
      - application/json
      description: Get a KPI Template by ID
      parameters:
      - description: KPI Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Get a KPI Template by ID
      tags:
      - KPI
    put:
      consumes:
      - application/json
      description: Update a KPI Template
      parameters:
      - description: KPI Template ID
        in: path
        name: id
        required: true
        type: string
      - description: KPI Template Data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.KPITemplateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Update a KPI Template
      tags:
      - KPI
  /v1/upload/download:
    post:
      consumes:
      - application/json
      description: Download a file
      parameters:
      - description: Request to download file
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RequestDownloadFile'
      produces:
      - application/octet-stream
      responses:
        "200":
          description: File content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Download a file
      tags:
      - Upload
  /v1/upload/file:
    put:
      consumes:
      - application/json
      description: Delete a file
      parameters:
      - description: Request to delete file
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RequestDeleteFile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      summary: Delete a file
      tags:
      - Upload
  /v1/user:
    get:
      consumes:
      - application/json
      description: ใช้สำหรับดึงรายการผู้ใช้งานแบบแบ่งหน้า
      parameters:
      - description: Search first_name_th last_name_th first_name_en last_name_en
        in: query
        name: search
        type: string
      - description: Filter by user status (e.g., pending, approved, rejected)
        in: query
        name: status
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Field to sort by
        in: query
        name: sortBy
        type: string
      - description: Sort order (asc|desc)
        in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseSuccessPaginationResponseSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseError400ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: Get all users
      tags:
      - user
    post:
      consumes:
      - multipart/form-data
      description: ใช้สำหรับสร้างผู้ใช้ใหม่ โดยจะไม่สามารถสร้างผู้ใช้ที่มีบัตรประชาชนซ้ำได้
      parameters:
      - description: อีเมล
        in: formData
        name: email
        required: true
        type: string
      - description: รหัสผ่าน
        in: formData
        name: password
        required: true
        type: string
      - description: คำนำหน้าชื่อ (TH)
        in: formData
        name: title_th
        type: string
      - description: คำนำหน้าชื่อ (EN)
        in: formData
        name: title_en
        type: string
      - description: ชื่อ (TH)
        in: formData
        name: first_name_th
        required: true
        type: string
      - description: นามสกุล (TH)
        in: formData
        name: last_name_th
        required: true
        type: string
      - description: ชื่อ (EN)
        in: formData
        name: first_name_en
        type: string
      - description: นามสกุล (EN)
        in: formData
        name: last_name_en
        type: string
      - description: เลขบัตรประชาชน (13 หลัก)
        in: formData
        name: id_card
        required: true
        type: string
      - description: ไฟล์รูปโปรไฟล์
        in: formData
        name: avatar
        type: file
      - description: เบอร์โทร
        in: formData
        name: phone
        type: string
      - description: รหัสพนักงาน
        in: formData
        name: employee_code
        type: string
      - description: เพศ
        in: formData
        name: gender
        type: string
      - description: วันเกิด (YYYY-MM-DD)
        in: formData
        name: birth_date
        type: string
      - description: วันที่เริ่มงาน (YYYY-MM-DD)
        in: formData
        name: hire_date
        type: string
      - description: ตำแหน่งงาน
        in: formData
        name: position_id
        type: string
      - description: แผนก
        in: formData
        name: department_id
        type: string
      - description: ประเภทพนักงาน
        in: formData
        name: employment_type
        type: string
      - description: ที่อยู่บรรทัดที่ 1
        in: formData
        name: address_line1
        type: string
      - description: ที่อยู่บรรทัดที่ 2
        in: formData
        name: address_line2
        type: string
      - description: ตำบล/แขวง
        in: formData
        name: subdistrict
        type: string
      - description: อำเภอ/เขต
        in: formData
        name: district
        type: string
      - description: จังหวัด
        in: formData
        name: province
        type: string
      - description: รหัสไปรษณีย์
        in: formData
        name: postal_code
        type: string
      - description: ประเทศ
        in: formData
        name: country
        type: string
      - description: ชื่อธนาคาร
        in: formData
        name: bank_name
        type: string
      - description: เลขบัญชี
        in: formData
        name: account_no
        type: string
      - description: ชื่อบัญชี
        in: formData
        name: account_name
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.BaseSuccess201ResponseSwagger'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseError400ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: Create a new user
      tags:
      - user
  /v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: ใช้สำหรับลบผู้ใช้ตาม ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseError400ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: Delete user by ID
      tags:
      - user
    get:
      consumes:
      - application/json
      description: ใช้สำหรับดึงข้อมูลผู้ใช้ตาม ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseError400ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: Get user by ID
      tags:
      - user
    put:
      consumes:
      - application/json
      description: ใช้สำหรับอัปเดตข้อมูลผู้ใช้ตาม ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.RequestUpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseError400ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: Update user by ID
      tags:
      - user
  /v1/user/documents:
    put:
      consumes:
      - multipart/form-data
      description: ใช้สำหรับอัปเดตเอกสารของผู้ใช้
      parameters:
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: string
      - description: Document type (avatars = รูปโปรไฟล์ , idcards = หลักฐานสำเนาบัตรประชาชน,
          graduation = หลักฐานการจบการศึกษา, transcript = หลักฐานการศึกษา, resume
          = หลักฐานการสมัครงาน, health = หลักฐานการตรวจสุขภาพ, military = หลักฐานการผ่านการเกณฑ์ทหาร,
          criminal = หลักฐานการตรวจประวัติอาชญากรรม, other = โฟลเดอร์อัปโหลดทั่วไป)
        in: formData
        name: type
        required: true
        type: string
      - description: Document file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseError400ResponseSwagger'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseError500ResponseSwagger'
      summary: Update user documents
      tags:
      - user
swagger: "2.0"
